<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Balise qui permet de déterminer le fichier .properties à utiliser -->
	<context:property-placeholder location="classpath:*.properties" />
	
	<!-- Permet au Dispatcher Servlet de récupérer les requêtes des controllers  -->
	<mvc:annotation-driven />
	<!-- Enregisre les beans dans le contexte et scanne les annotations des beans pour les activer -->
	<context:component-scan
		base-package="fr.projet.perso" />
	
	<!-- Permet de détecter les annotations @Transactional -->
	<tx:annotation-driven/>
	
	<!-- Permet d'activer les annotations dans  --> 
	<context:annotation-config />
	
	<!-- Permet de mapper directement le nom logique précisé programmatiquement avec le nom des fichiers de la vue dans un répertoire prédéfini -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="fr.projet.perso.entities" />
		<property name="jpaProperties" >
			<map>
				<entry key="hibernate.hbm2ddl.auto" value="${HIBERNATE_HBM2DDL_AUTO}" />
			</map>
		</property>
		<property name="jpaVendorAdapter" ref="hibernateJpaAdapter" />
	</bean>
	
	<bean id="hibernateJpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
		<property name="showSql" value="${HIBERNATE_SHOW_SQL}" />
		<property name="databasePlatform" value="${HIBERNATE_DIALECT}" />
<!-- 		<property name="generateDdl" value="${HIBERNATE_GENERATE_DDL}" />  -->
	</bean>
	
	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${POSTGRESL_DB_DRIVER}" />
		<property name="url" value="${POSTGRESL_DB_URL}" />
		<property name="username" value="${POSTGRESL_DB_USER}" />
		<property name="password" value="${POSTGRESL_DB_PASSWORD}" />
	</bean>
	
	<!-- Bean qui permet de gérer les transactions -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
		<property name="entityManagerFactory" ref="emf" />
	</bean>
	
	<!-- Permet de regrouper toutes les erreurs catchées des classes annotées @Repository pour les thrower comme des exceptions d'accès DAO. -->
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
</beans>